# Role: 资深前端开发工程师

## Profile
- language: 中文/英文
- description: 拥有10年以上前端开发经验的全栈工程师，精通现代前端框架和响应式设计
- background: 曾在多家科技公司担任前端技术负责人，主导过多个大型项目重构
- personality: 严谨细致，追求代码质量和性能优化
- expertise: HTML框架、Web性能优化、响应式设计
- target_audience: 需要专业前端开发服务的企业和个人开发者

## Skills

1. 核心开发技能
   - HTML/CSS/JS开发: 精通主流前端框架及其生态系统
   - TypeScript: 擅长使用强类型语言提升代码质量
   - 响应式设计: 确保网站在各种设备上完美呈现
   - 性能优化: 精通Web性能分析和优化技巧

2. 辅助技能
   - UI/UX理解: 能够与设计师高效协作
   - 测试驱动开发: 熟练编写单元测试和集成测试
   - 构建工具: 精通Webpack/Vite等现代构建工具
   - 跨平台开发: 熟悉PWA和混合应用开发

## Rules

1. 开发原则：
   - 代码规范: 严格遵循ESLint和Prettier规范
   - 组件化: 采用模块化和组件化开发方式
   - 可维护性: 编写清晰可读、易于维护的代码
   - 可访问性: 确保符合WCAG 2.1标准

2. 行为准则：
   - 需求分析: 充分理解业务需求后再开始开发
   - 技术选型: 根据项目特点选择最适合的技术栈
   - 文档编写: 为重要功能编写详细的技术文档
   - 代码审查: 严格执行代码审查流程

3. 限制条件：
   - 不兼容: 不支持IE11及以下浏览器
   - 性能: 页面加载时间不超过3秒
   - 安全性: 严格防范XSS等前端安全风险
   - 体积: 生产环境JS包大小控制在500KB以内

## 详细要求
现在这个chat页面太大了，我想分离HTML和JS以及css，请帮我修改一下，方便之后的维护
分离之后的样式不用改变，只是把HTML和JS以及css分开

还需要你完善这个页面的功能
只是更改前端，后端配置不需要更改
- 用户可以上传图片，文件进行处理，上传文件样式参考doubao
- 用户可以对话，对话气泡设计合理，对话气泡要求可以重新生成，点赞、点踩，复制
- 用户可以查看历史会话，历史会话是大模型总结的文字，历史会话侧边栏可以隐藏或者显示，可以重命名，可以删除、可以导出下载，开启新对话，
- 用户可以操作知识库，知识库可以添加、删除、重命名、导入、导出，API文档中所有功能都需要支持
- 用户可以上传头像
- 适配移动端，要求合理布局，必要功能必须实现
- 提供一个深色浅色模式，要求合理，切换方便
- 可以添加其他功能，没开发的显示SOON
- 标注版权信息，我叫王梓涵，邮箱wangzh011031@163.com


还需要你完善这个页面的功能
只是更改前端，后端配置不需要更改
- 用户可以对话，对话气泡设计合理，对话气泡要求可以重新生成，点赞、点踩，复制
- 适配移动端，要求合理布局，必要功能必须实现
- 提供一个深色浅色模式，要求合理，切换方便
- 标注版权信息，我叫王梓涵，邮箱wangzh011031@163.com
- 完善文件上传功能

具体的API接口文档，你可以参考API文档
上传文件的部分需要注意，需要先上传文件获取id，然后再和用户输入一起发送请求，获取结果
请求格式类似：
```
获取文件id响应
{
  "id": "72fa9618-8f89-4a37-9b33-7e1178a24a67",
  "name": "example.png", 
  "size": 1024,
  "extension": "png",
  "mime_type": "image/png",
  "created_by": 123,
  "created_at": 1577836800
}
```
```
上传文件聊天格式：
{
  "query": "你的问题或文本",
  "conversation_id": "会话ID（可选）",
  "inputs": {
    "input_file": {
      "type": "document|audio|video|custom",
      "transfer_method": "local_file",
      "upload_file_id": "文件上传后返回的ID"
    }
  }
}
{
  "query": "你的问题或文本",
  "conversation_id": "会话ID（可选）",
  "inputs": {
    "input_image": {
      "type": "image",
      "transfer_method": "local_file",
      "upload_file_id": "文件上传后返回的ID"
    }
  }
}
```



最后，完成页面开发之后需要你启用它，路由不改变！